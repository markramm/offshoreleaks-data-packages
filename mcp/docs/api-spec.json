{
  "name": "offshore-leaks-mcp-server",
  "version": "1.0.0",
  "description": "MCP Server API Specification for Offshore Leaks Neo4j Database",
  "mcp_protocol_version": "2024-11-05",
  "metadata": {
    "server": {
      "name": "offshore-leaks-mcp-server",
      "version": "1.0.0",
      "description": "Model Context Protocol server for querying the ICIJ Offshore Leaks database containing Paradise Papers, Panama Papers, and other offshore financial data. Provides read-only access to public investigative journalism data for research purposes.",
      "authors": [
        {
          "name": "Research Team",
          "email": "research@example.com"
        }
      ],
      "homepage": "https://offshoreleaks.icij.org/",
      "repository": "https://github.com/example/offshore-leaks-mcp-server"
    },
    "capabilities": {
      "tools": {},
      "resources": {},
      "prompts": {}
    }
  },
  "tools": [
    {
      "name": "search_entities",
      "description": "Search for offshore entities (companies, trusts, foundations) by name, jurisdiction, or other criteria",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Partial or full name of the entity to search for"
          },
          "jurisdiction": {
            "type": "string",
            "description": "Jurisdiction code or description where the entity is registered"
          },
          "country_codes": {
            "type": "string",
            "description": "ISO country codes associated with the entity"
          },
          "company_type": {
            "type": "string",
            "description": "Type of company (e.g., Corporation, LLC, Trust)"
          },
          "status": {
            "type": "string",
            "description": "Status of the entity (e.g., Active, Defaulted, Struck off)"
          },
          "incorporation_date_from": {
            "type": "string",
            "format": "date",
            "description": "Search entities incorporated after this date (YYYY-MM-DD)"
          },
          "incorporation_date_to": {
            "type": "string",
            "format": "date",
            "description": "Search entities incorporated before this date (YYYY-MM-DD)"
          },
          "source": {
            "type": "string",
            "enum": ["Paradise Papers", "Panama Papers", "Offshore Leaks", "Bahamas Leaks", "Pandora Papers"],
            "description": "Filter by data source"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "description": "Maximum number of results to return"
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "default": 0,
            "description": "Number of results to skip for pagination"
          }
        },
        "required": []
      }
    },
    {
      "name": "search_officers",
      "description": "Search for officers (individuals) by name, country, or role in entities",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Partial or full name of the officer to search for"
          },
          "countries": {
            "type": "string",
            "description": "Countries associated with the officer"
          },
          "country_codes": {
            "type": "string",
            "description": "ISO country codes associated with the officer"
          },
          "source": {
            "type": "string",
            "enum": ["Paradise Papers", "Panama Papers", "Offshore Leaks", "Bahamas Leaks", "Pandora Papers"],
            "description": "Filter by data source"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "description": "Maximum number of results to return"
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "default": 0,
            "description": "Number of results to skip for pagination"
          }
        },
        "required": []
      }
    },
    {
      "name": "get_connections",
      "description": "Explore relationships between entities, officers, and intermediaries starting from a specific node",
      "inputSchema": {
        "type": "object",
        "properties": {
          "start_node_id": {
            "type": "string",
            "description": "Node ID to start the relationship exploration from"
          },
          "relationship_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["officer_of", "intermediary_of", "registered_address", "connected_to", "same_name_as", "same_id_as"]
            },
            "description": "Types of relationships to follow. If empty, follows all relationship types"
          },
          "max_depth": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "default": 2,
            "description": "Maximum number of relationship hops to explore"
          },
          "node_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Entity", "Officer", "Intermediary", "Other", "Address"]
            },
            "description": "Types of nodes to include in results. If empty, includes all node types"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "default": 50,
            "description": "Maximum number of connected nodes to return"
          }
        },
        "required": ["start_node_id"]
      }
    }
  ],
  "data_models": {
    "Entity": {
      "type": "object",
      "description": "Offshore entity (company, trust, foundation)",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "Unique identifier for the entity"
        },
        "name": {
          "type": "string",
          "description": "Name of the entity"
        },
        "jurisdiction": {
          "type": "string",
          "description": "Jurisdiction code where entity is registered"
        },
        "jurisdiction_description": {
          "type": "string",
          "description": "Human-readable jurisdiction name"
        },
        "address": {
          "type": "string",
          "description": "Registered address of the entity"
        },
        "incorporation_date": {
          "type": "string",
          "format": "date",
          "description": "Date of incorporation (YYYY-MM-DD)"
        },
        "company_type": {
          "type": "string",
          "description": "Type of company (Corporation, LLC, Trust, etc.)"
        },
        "status": {
          "type": "string",
          "description": "Current status (Active, Defaulted, Struck off, etc.)"
        },
        "countries": {
          "type": "string",
          "description": "Countries associated with the entity"
        },
        "country_codes": {
          "type": "string",
          "description": "ISO country codes"
        },
        "sourceID": {
          "type": "string",
          "description": "Source dataset identifier"
        },
        "valid_until": {
          "type": "string",
          "format": "date",
          "description": "Date until which this data is valid"
        }
      },
      "required": ["node_id", "name", "jurisdiction", "jurisdiction_description", "sourceID", "valid_until"]
    },
    "Officer": {
      "type": "object",
      "description": "Individual person who is an officer of an entity",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "Unique identifier for the officer"
        },
        "name": {
          "type": "string",
          "description": "Name of the officer"
        },
        "countries": {
          "type": "string",
          "description": "Countries associated with the officer"
        },
        "country_codes": {
          "type": "string",
          "description": "ISO country codes"
        },
        "sourceID": {
          "type": "string",
          "description": "Source dataset identifier"
        },
        "valid_until": {
          "type": "string",
          "format": "date",
          "description": "Date until which this data is valid"
        }
      },
      "required": ["node_id", "name", "sourceID", "valid_until"]
    }
  },
  "constraints_and_limits": {
    "rate_limiting": {
      "requests_per_minute": 60,
      "requests_per_hour": 1000,
      "requests_per_day": 10000,
      "burst_limit": 10,
      "description": "Rate limits apply per API key or IP address"
    },
    "query_complexity": {
      "max_depth": 5,
      "max_results_per_query": 200,
      "max_nodes_in_network_analysis": 1000,
      "query_timeout_seconds": 30,
      "description": "Limits to prevent resource exhaustion"
    },
    "data_restrictions": {
      "read_only": true,
      "public_data_only": true,
      "research_use_disclaimer": "This data is provided for research and journalistic purposes. Users must verify information independently and respect privacy rights.",
      "attribution_required": "International Consortium of Investigative Journalists (ICIJ) Offshore Leaks Database"
    }
  }
}
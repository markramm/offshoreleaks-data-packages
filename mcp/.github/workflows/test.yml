name: Test

on:
  push:
    branches: [ main, develop ]
    paths: [ 'mcp/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'mcp/**' ]

defaults:
  run:
    working-directory: mcp

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Create virtual environment
      run: python -m venv venv

    - name: Install dependencies
      run: |
        source venv/bin/activate
        pip install --upgrade pip
        pip install -e ".[dev,test]"

    - name: Run pre-commit hooks
      run: |
        source venv/bin/activate
        pre-commit run --all-files
      if: matrix.python-version == '3.10'  # Only run on one version to avoid conflicts

    - name: Run tests with pytest
      run: |
        source venv/bin/activate
        pytest --cov=src --cov-report=xml --cov-report=term-missing -v

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./mcp/coverage.xml
        working-directory: mcp
      if: matrix.python-version == '3.10'

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install bandit[toml] safety

    - name: Run security checks with bandit
      run: |
        source venv/bin/activate
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/

    - name: Check dependencies for security vulnerabilities
      run: |
        source venv/bin/activate
        safety check --json --output safety-report.json || true
        safety check
